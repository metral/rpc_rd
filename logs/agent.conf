input {
    file {
        type => "glance"
        start_position => "beginning"
        path => ["/var/log/glance/api.log",
                 "/var/log/glance/registry.log",
                 "/var/log/glance/scrubber.log"]
    }
    file {
        path => "/var/log/keystone/keystone.log"
        start_position => "beginning"
        type => "keystone"
    }
    file {
        type => "nova"
        start_position => "beginning"
        path => ["/var/log/nova/nova-consoleauth.log",
                 "/var/log/nova/nova-api.log",
                 "/var/log/nova/nova-manage.log",
                 "/var/log/nova/nova-network.log",
                 "/var/log/nova/nova-scheduler.log",
                 "/var/log/nova/nova-xvpvncproxy.log",
                 "/var/log/nova/nova-compute.log"]
    }
    file {
        path => "/var/log/nova/quantum-server.log"
        start_position => "beginning"
        type => "quantum"
    }
    file {
        type => "apache-access"
        start_position => "beginning"
        path => ["/var/log/apache2/access.log",
                 "/var/log/nginx/access.log",
                 "/var/log/apache2/other_vhosts_access.log"]
    }
    file {
        type => "apache-error"
        start_position => "beginning"
        path => [
            "/var/log/apache2/error.log",
            "/var/log/nginx/error.log"
        ]
    }
    file {
        type => "rabbitmq"
        start_position => "beginning"
        path => [
            "/var/log/rabbigmq/rabbit.log"
        ]
    }
    file {
        type => "libvirt"
        start_position => "beginning"
        path => [
            "/var/log/libvirt/libvirtd.log"
        ]
    }
}

filter {
    grok {
        type => "glance"
        pattern => "%{TIMESTAMP_ISO8601:timestamp} %{NUMBER:response}%{SPACE} %{AUDITLOGLEVEL:level} \[%{PROG:program}\] %{GREEDYDATA:message}"
    }
    grok {
        type => "keystone"
        pattern => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} \[%{PROG:program}\]: %{GREEDYDATA:message}"
    }
    grok {
        type => "nova"
        pattern => "%{TIMESTAMP_ISO8601:timestamp} %{NUMBER:pid} %{AUDITLOGLEVEL:level} %{PROG:program} %{GREEDYDATA:message}"
    }
    grok {
        type => "quantum"
        pattern => "%{TIMESTAMP_ISO8601:timestamp} %{SPACE} %{LOGLEVEL:level} \[%{PROG:program}\] %{GREEDYDATA:message}"
    }
    grok {
        type => "apache-access"
        pattern => "%{COMBINEDAPACHELOG}"
    }
    grok {
        type => "apache-error"
        pattern => "\[%{APACHE_DATETIME_ERROR:timestamp}\] \[%{APACHE_LOG_LEVEL:level}\] %{GREEDYDATA:message}"
    }
    grok {
        type => "rabbitmq"
        pattern => "=%{LOGLEVEL:level} REPORT==== %{RABBITMQ_DATE:timestamp} ==="
    }
    grok {
        type => "libvirt"
        pattern => "%{TIMESTAMP_ISO8601:timestamp}: %{NUMBER:code}: %{LOGLEVEL:level} : %{GREEDYDATA:message}"
    }
    date {
        match => [ 
            "yyyy-MM-dd HH:mm:ss.SSSZ", 
            "dd-MMM-YYYY::HH:mm:ss", 
            "yyyy-MM-dd HH:mm:ss,SSS",
            "yyyy-MM-dd HH:mm:ss.SSS",
            "yyyy-MM-dd HH:mm:ss",
            "EEE MMM DD HH:mm:ss YYYY",
            "dd/MMM/yyyy:HH:mm:ss Z",
            "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
        ]
    }
    multiline {
        type => "glance"
        pattern => "^(([0-9]+-(?:0?[1-9]|1[0-2])-(?:3[01]|[1-2]?[0-9]|0?[1-9]))|((?:0?[1-9]|1[0-2])/(?:3[01]|[1-2]?[0-9]|0?[1-9]))).*$"
        negate => true
        what => "previous"
    }
    multiline {
        type => "keystone"
        pattern => "^(([0-9]+-(?:0?[1-9]|1[0-2])-(?:3[01]|[1-2]?[0-9]|0?[1-9]))|((?:0?[1-9]|1[0-2])/(?:3[01]|[1-2]?[0-9]|0?[1-9]))).*$"
        negate => true
        what => "previous"
    }
    multiline {
        type => "nova"
        pattern => "^(([0-9]+-(?:0?[1-9]|1[0-2])-(?:3[01]|[1-2]?[0-9]|0?[1-9]))|((?:0?[1-9]|1[0-2])/(?:3[01]|[1-2]?[0-9]|0?[1-9]))).*$"
        negate => true
        what => "previous"
    }
    multiline {
        type => "rabbitmq"
        pattern => "^="
        negate => true
        what => "previous"
    }
}

output {
    elasticsearch { host => localhost }
}

